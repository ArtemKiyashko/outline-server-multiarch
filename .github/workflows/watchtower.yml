name: Watchtower

permissions:
  packages: write

env:
  PACKAGE_NAME: 'ghcr.io/seia-soto/shadowbox'

on:
  push:
  schedule:
    - cron: '0 0 * * *'

jobs:
  prepare:
    runs-on: ubuntu-20.04
    outputs:
      local: ${{ steps.local.outputs.ver }}
      remote: ${{ steps.remote.outputs.ver }}
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2

      - name: Get latest tag
        id: remote
        run: |
          echo ::set-output name=ver::$( \
            curl -sL https://api.github.com/repos/Jigsaw-Code/outline-server/releases | \
            jq -r '[.[] | select(.prerelease == false)][0].tag_name'
          )

      - name: Set flag to run
        id: local
        run: |
          if [[ ! -f version/local.txt ]]; then
            echo ::set-output name=ver::v0

            exit 0
          fi

          echo ::set-output name=ver::$(cat version/local.txt)

  build:
    runs-on: ubuntu-20.04
    needs: [
      prepare
    ]
    strategy:
      fail-fast: false
      matrix:
        arch: ['arm64']
        checkpoint: ['master', 'latest']
        include:
          - checkpoint: latest
            node: 12
          - checkpoint: master
            node: 16
    if: |
      (needs.prepare.outputs.remote != needs.prepare.outputs.local) ||
      (matrix.checkpoint != 'latest')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Build
        run: |
          bash ./build.sh "${{ matrix.arch }}" "${{ env.PACKAGE_NAME }}:${{ matrix.checkpoint }}-${{ matrix.arch }}" "${{ matrix.checkpoint }}"

      - name: Upload to registry and save version
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u USERNAME --password-stdin
          docker push "${{ env.PACKAGE_NAME }}:${{ matrix.checkpoint }}-${{ matrix.arch }}"

          echo "${{ needs.prepare.outputs.remote }}" > local.txt

      - name: Upload version
        if: ${{ matrix.checkpoint == 'latest' }}
        uses: actions/upload-artifact@v2
        with:
          name: version
          path: local.txt
