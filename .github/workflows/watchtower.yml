name: Watchtower

env:
  PACKAGE_NAME: 'ghcr.io/seia-soto/shadowbox'

on:
  push:
    paths:
      - '.github/**'
      - '**.sh'
  schedule:
    - cron: '0 0 * * *'

jobs:
  prepare:
    runs-on: ubuntu-20.04
    outputs:
      local: ${{ steps.local.outputs.ver }}
      remote: ${{ steps.remote.outputs.ver }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get latest version
        id: remote
        run: |
          echo ::set-output name=ver::$( \
            curl -sL https://api.github.com/repos/Jigsaw-Code/outline-server/releases | \
            jq -r '[.[] | select(.prerelease == false)][0].tag_name'
          )

      - name: Get local version
        id: local
        run: |
          if [[ ! -f etc/versions/local.txt ]]; then
            echo ::set-output name=ver::v0

            exit 0
          fi

          echo ::set-output name=ver::$(cat etc/versions/local.txt)

  build:
    runs-on: ubuntu-20.04
    needs: [
      prepare
    ]
    strategy:
      fail-fast: false
      matrix:
        checkpoint: ['master', 'latest']
        include:
          - checkpoint: latest
            node: 12
          - checkpoint: master
            node: 16
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and release
        if: |
          (matrix.checkpoint == 'latest' && needs.prepare.outputs.remote != needs.prepare.outputs.local) ||
          matrix.checkpoint == 'master'
        run: |
          bash ./build.sh 'linux/arm64,linux/amd64' "${{ env.PACKAGE_NAME }}:${{ matrix.checkpoint }}" "${{ matrix.checkpoint }}"

      - name: Save artifacts
        run: |
          mkdir -p etc/versions
          echo "${{ needs.prepare.outputs.remote }}" > etc/versions/local.txt

      - name: Commit artifacts
        if: |
          needs.prepare.outputs.remote != needs.prepare.outputs.local &&
          matrix.checkpoint == 'latest'
        uses: EndBug/add-and-commit@v7
        with:
          add: '.'
          author_name: HoJeong Go
          author_email: seia@outlook.kr
          branch: master
          branch_mode: create
          committer_name: GitHub Action
          committer_email: 30369714+seia-soto@users.noreply.github.com
          cwd: '.'
          default_author: github_actor
          message: 'chore(ci): save latest version string'
          pathspec_error_handling: ignore
          pull: '--no-rebase'
          push: true
