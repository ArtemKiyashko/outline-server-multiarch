name: Build
env:
  PACKAGE_NAME: 'ghcr.io/seia-soto/shadowbox'
  ARCH: 'linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6'
on:
  push:
  schedule:
    - cron: '0 0 * * *'
jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      local_release: ${{ steps.local_release.outputs.version }}
      local_tag: ${{ steps.local_tag.outputs.version }}
      remote_release: ${{ steps.remote_release.outputs.version }}
      remote_tag: ${{ steps.remote_tag.outputs.version }}
    steps:
      - name: Get remote release
        id: remote_release
        run: |
          echo ::set-output name=version::$( \
            curl -sL https://api.github.com/repos/Jigsaw-Code/outline-server/releases | \
            jq -r '[.[] | select(.prerelease == false)][0].tag_name'
          )
      - name: Get remote tag
        id: remote_tag
        run: |
          echo ::set-output name=version::$( \
            curl -sL https://api.github.com/repos/Jigsaw-Code/outline-server/tags | \
            jq -r '[.[] | select(.prerelease == false)][0].name'
          )
      - name: Get local release
        id: local_release
        run: |
          echo ::set-output name=version::$( \
            curl -sL "https://api.github.com/repos/${{github.repository}}/releases" | \
            jq -r '[.[] | select(.prerelease == false)][0].tag_name'
          )
      - name: Get local tag
        id: local_tag
        run: |
          echo ::set-output name=version::$( \
            curl -sL "https://api.github.com/repos/${{github.repository}}/tags" | \
            jq -r '[.[] | select(.prerelease == false)][0].tag_name'
          )
  build:
    needs: [version]
    if: |
      ${{matrix.CHECKPOINT}} == 'master' ||
      (${{matrix.CHECKPOINT}} == 'latest' && needs.version.outputs.remote_tag != needs.version.outputs.local_tag) ||
      (${{matrix.CHECKPOINT}} == 'release' && needs.version.outputs.remote_release != needs.version.outputs.local_release)
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        CHECKPOINT: ['master', 'latest', 'release']
        include:
          - CHECKPOINT: master
            NODE: 16
          - CHECKPOINT: latest
            NODE: 16
          - CHECKPOINT: release
            NODE: 12
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.NODE}}
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and release
        run: |
          bash ./build.sh "${{env.ARCH}}" "${{env.PACKAGE_NAME}}:${{matrix.CHECKPOINT}}" "${{matrix.CHECKPOINT}}"
